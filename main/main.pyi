import pygame
from pygame.math import Vector2 as V2
from typing import Union, Callable, Dict, Tuple, Any


AnyVector = Union[Tuple[float, float], V2, Vector2]
EventDictType = Dict[int, Callable[[], None]]

EVENTDICT:EventDictType


class Vector2(V2):
    def int(self) -> Vector2: ...

class Game:
    def __init__(self, screenSize: tuple[int, int]) -> None:
        self.display: pygame.Surface = None
        self.clock: pygame.time.Clock = None
        self.running: bool = None
        self.tickCall: Callable[[int], None]
        self.drawCall: Callable[[], None]
        self.eventDict: EventDictType = None
        self.keyDownDict: Any = None
        ...
    def run(self) -> None: ...
    def tick(self) -> None: ...
    def draw(self) -> None: ...
    def handleEvents(self) -> None: ...
    def exit(self) -> None: ...
    def tickCall(self, dt: int) -> None: ...
    def drawCall(self) -> None: ...


class Drawable:
    def __init__(self, display:pygame.Surface, pos:AnyVector) -> None:
        self.display: pygame.Surface = None
        self.pos: Vector2 = None
        ...
    def tick(self, dt:int) -> None: ...
    def draw(self) -> None: ...
    def moveTo(self, pos:AnyVector) -> None: ...
    def moveBy(self, offset:AnyVector) -> None: ...

class Image(Drawable):
    def __init__(self, display: pygame.Surface, pos:AnyVector, image:pygame.Surface) -> None:
        self.image: pygame.Surface = None
        ...
    def draw(self) -> None: ...